{"version":3,"sources":["Map.js","Menu.js","App.js","serviceWorker.js","index.js"],"names":["MyMapComponent","withScriptjs","withGoogleMap","props","react_default","a","createElement","lib","defaultZoom","zoom","defaultCenter","lat","lng","center","mymarkers","filter","marker","isVisible","map","index","name","key","position","animation","window","google","maps","Animation","DROP","onClick","handleMarkerClick","isOpen","className","Fragment","presentvenue","bestPhoto","alt","src","concat","prefix","suffix","Map","Object","assign","this","isMarkerShown","googleMapURL","loadingElement","style","height","containerElement","width","mapElement","Component","Menu","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","e","handleQueryChange","target","value","_this2","query","type","onChange","places","item","id","itemClick","foursquare","require","clientID","clientSecret","params","near","radius","App","closeAllMarkers","markers","state","setState","openMarker","venues","getVenues","then","res","response","geocode","feature","geometry","venue","location","catch","error","alert","_this3","detailParams","venue_id","getVenue","details","newMarkers","toLowerCase","includes","linkedMarker","src_Menu","src_Map","handleMouseOver","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fbc747f9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\r\n\r\nconst MyMapComponent = withScriptjs(\r\n  withGoogleMap((props) =>\r\n    <GoogleMap\r\n      defaultZoom={8}\r\n      zoom={props.zoom}\r\n      defaultCenter={{ lat: -34.397, lng: 150.644 }}\r\n      center={props.center}\r\n      >\r\n    {props.mymarkers && props.mymarkers.filter(marker => marker.isVisible).map((marker,index) => {\r\n      return <Marker\r\n      name={marker.name}\r\n      key={index}\r\n      position={{lat:marker.lat, lng:marker.lng}}\r\n      animation= {window.google.maps.Animation.DROP}\r\n      onClick={()=> props.handleMarkerClick(marker)}>\r\n      {marker.isOpen && (\r\n        <InfoWindow className=\"info-window\">\r\n          <React.Fragment>\r\n            <p>{marker.name}</p>\r\n            {(props.presentvenue.bestPhoto) ? (\r\n            <img alt={marker.name}\r\n            src={`${props.presentvenue.bestPhoto.prefix}200x200${props.presentvenue.bestPhoto.suffix}`}/>)\r\n            :\r\n            (<p>No Image Available</p>)}\r\n            </React.Fragment>\r\n        </InfoWindow>\r\n      )}\r\n      </Marker>\r\n  })}\r\n  </GoogleMap>\r\n))\r\n\r\nclass Map extends Component {\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"my-map-container\">\r\n      <MyMapComponent\r\n      {...this.props}\r\n      isMarkerShown\r\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?&key=AIzaSyB63D2az3Guib3VGk7Auoie1fyG3lY1SzQ&v=3\"\r\n      loadingElement={<div style={{ height: `100%`}} />}\r\n      containerElement={<div style={{width:`100%`, height: `800px`}} />}\r\n      mapElement={<div style={{ height: `100%` }} />}\r\n    />\r\n    </div>\r\n)\r\n}}\r\nexport default Map;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Menu extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n  }\r\nhandleChange(e) {\r\n  this.props.handleQueryChange(e.target.value)\r\n}\r\n\r\n\r\n  render () {\r\n    const query = this.props.query\r\n    return (\r\n      <div className=\"Menu\">\r\n        <div>\r\n        <header>\r\n        <h1>LFKoffee</h1>\r\n        <span className=\"info-span\">powered by foursquare</span>\r\n        </header>\r\n          <p className=\"searchbar-header\">Search for a place</p>\r\n          <input type='text'\r\n          value={query}\r\n          onChange={this.handleChange}/>\r\n          </div>\r\n          <ul>\r\n            {this.props.places.filter(marker => marker.isVisible).map((item,key) =>\r\n              <li className=\"Menu-item\"\r\n              key={item.id}\r\n              onClick={()=> this.props.itemClick(item.id)}>\r\n              {(item.isOpen)?\r\n                <button className=\"open-button\">{item.name}</button>:\r\n                <button>{item.name}</button>}\r\n            </li>)}\r\n            </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Menu\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Map from './Map.js'\r\nimport Menu from './Menu.js'\r\n\r\n\r\n//Set my clientID and clientSecret for react-foursquare\r\nvar foursquare = require('react-foursquare')({\r\n  clientID: 'A01M4GOIYWVQQ3KVZMGJQHB1ASKPDDRY4RWJZTT0SA2DHADQ',\r\n  clientSecret: 'GOJPCR5SCPPV5ABTCNTRUNRUFPMVN0UJJVOTZZ2M0ADQ0B3D'\r\n});\r\n\r\n//search parameters for react-foursquare\r\nvar params = {\r\n  \"near\": \"Lawrence, KS\",\r\n  \"query\": 'coffee shops',\r\n  \"radius\": 1500\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n  this.state = {\r\n\r\n     mymarkers: [],\r\n     center: [],\r\n     zoom: 14,\r\n     presentvenue: [],\r\n     query: ''\r\n  }\r\n  this.handleQueryChange = this.handleQueryChange.bind(this)\r\n  this.itemClick =this.itemClick.bind(this)\r\n}\r\n\r\n//call to foursquare for data\r\ncomponentDidMount() {\r\n  foursquare.venues.getVenues(params)\r\n      .then(res=> {\r\n        const  centerLat  = res.response.geocode.feature.geometry.center.lat;\r\n        const  centerLng  = res.response.geocode.feature.geometry.center.lng;\r\n        const center = {lat:centerLat, lng:centerLng}\r\n        const mymarkers = res.response.venues.map( venue => {\r\n          return {\r\n            lat: venue.location.lat,\r\n            lng: venue.location.lng,\r\n            name: venue.name,\r\n            isOpen: false,\r\n            isVisible: true,\r\n            id: venue.id\r\n          }\r\n        })\r\n        this.setState({mymarkers, center})\r\n      }).catch(error => {\r\n        alert(`There was an error of ${error}`)\r\n      });\r\n  }\r\n\r\n  closeAllMarkers = () => {\r\n    const markers = this.state.mymarkers.map(marker => {\r\n      marker.isOpen = false;\r\n      return marker;\r\n    })\r\n    this.setState({mymarkers: Object.assign(this.state.mymarkers, markers)})\r\n  }\r\n\r\n  handleMarkerClick = (marker) => {\r\n    this.openMarker(marker);\r\n}\r\n//openMarker function provides information for the info window and opens the window\r\n  openMarker(marker) {\r\n    this.closeAllMarkers();\r\n    marker.isOpen = true;\r\n    this.setState({mymarkers: Object.assign(this.state.mymarkers, marker)})\r\n    let detailParams = {venue_id : marker.id}\r\n    foursquare.venues.getVenue(detailParams)\r\n        .then(response => {\r\n        const details = Object.assign(response.response.venue, marker);\r\n        this.setState({presentvenue : details})\r\n        })\r\n        .catch(error => {\r\n        this.setState({presentvenue: {}})\r\n      })\r\n    }\r\n//adjusts the list and the markers based on user entry\r\n    handleQueryChange(query) {\r\n      let newMarkers= [];\r\n      this.setState({query: query})\r\n      if (this.state.query==='') {\r\n      newMarkers = this.state.mymarkers.map(marker =>  {\r\n        marker.isVisible = true\r\n        return marker})\r\n    } else {\r\n      newMarkers = this.state.mymarkers.map( marker => {\r\n        if (marker.name.toLowerCase().includes(query.toLowerCase())){\r\n          marker.isVisible = true;\r\n        } else {\r\n          marker.isVisible = false;\r\n        }\r\n    return marker})\r\n  }\r\n  this.setState({mymarkers: newMarkers})\r\n}\r\n//connects the clicked list item to the marker on the map\r\n  itemClick (id) {\r\n    const linkedMarker = this.state.mymarkers.filter(marker=> marker.id===id);\r\n    this.openMarker(linkedMarker[0])\r\n}\r\n\r\n\r\n  render() {\r\n    const query = this.state.query\r\n    return (\r\n      <div className=\"App\">\r\n          <Menu query={query}\r\n          handleQueryChange={this.handleQueryChange}\r\n          itemClick={this.itemClick}\r\n          places={this.state.mymarkers}/>\r\n          <Map className=\"LFKMap\"\r\n          {...this.state}\r\n          handleMarkerClick={this.handleMarkerClick}\r\n          handleMouseOver={this.handleMouseOver}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}